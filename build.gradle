plugins {
    id 'java'
    id 'org.gauge' version '2.0.0'
}

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    testImplementation("org.junit.jupiter:junit-jupiter:5.+")
    testRuntimeOnly("org.junit.platform:junit-platform-launcher")

    testImplementation 'com.thoughtworks.gauge:gauge-java:+'
    testImplementation 'org.htmlunit:htmlunit:4.0.0'
    testImplementation 'se.fishtank:css-selectors:2.0'
    testImplementation 'org.jsoup:jsoup:1.17.2'
    testImplementation 'org.assertj:assertj-core:3.25.3'
    testImplementation 'org.json:json:20240303'
}

group = 'com.thoughtworks.gauge.test'
version = '0.4.0-SNAPSHOT'

java {
    // build to be compatible with JDK 8 so that the error message can be read if starting GoCD with a version
    // lower than its minimum supported version
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

import org.gauge.gradle.GaugeTask

def languages = ['java', 'js', 'csharp', 'dotnet', 'ruby', 'python']

languages.each {lang ->
    tasks.register("${lang}FT", GaugeTask) {
        doFirst {
            gauge {
                specsDir = 'specs'
                inParallel = true
                env = "ci-${lang}"
                tags = "${lang}"
                additionalFlags = "--simple-console"
            }
        }
    }
}

tasks.withType(Test).configureEach {
    // https://docs.gradle.org/8.4/userguide/upgrading_version_8.html#test_framework_implementation_dependencies
    // Using JUnitPlatform for running tests
    useJUnitPlatform()
}

tasks.withType(GaugeTask).configureEach {
    // https://docs.gradle.org/8.4/userguide/upgrading_version_8.html#test_task_default_classpath
    testClassesDirs = sourceSets.test.output
    classpath = sourceSets.test.runtimeClasspath
}